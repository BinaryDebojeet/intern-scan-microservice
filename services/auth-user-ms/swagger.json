{
  "openapi": "3.0.0",
  "info": {
    "title": "InternScan User Service API",
    "version": "1.0.0",
    "description": "API for user authentication, management, and OTP services."
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local API Gateway"
    }
  ],
  "paths": {
    "/auth/send-otp": {
      "post": {
        "summary": "Send OTP to Email or Mobile",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "mode": {
                    "type": "string",
                    "enum": ["mobile", "email"],
                    "example": "mobile"
                  },
                  "mobile": {
                    "type": "string",
                    "example": "9123048734"
                  },
                  "country-code": {
                    "type": "string",
                    "example": "91"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  }
                },
                "required": ["mode"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP sent successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessOtpSend"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing or invalid parameters."
          },
          "500": {
            "description": "Internal Server Error - Failed to send OTP."
          }
        }
      }
    },
    "/auth/verify-otp": {
      "post": {
        "summary": "Verify OTP",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "mode": {
                    "type": "string",
                    "enum": ["mobile", "email"]
                  },
                  "mobile": { "type": "string" },
                  "country-code": { "type": "string" },
                  "email": { "type": "string", "format": "email" },
                  "otp": { "type": "string", "example": "123456" }
                },
                "required": ["mode", "otp"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP verified successfully."
          },
          "401": {
            "description": "Invalid or expired OTP."
          }
        }
      }
    },
    "/auth": {
      "post": {
        "summary": "Authenticate (Login or Register)",
        "tags": ["Authentication"],
        "requestBody": {
          "description": "Handles both login and registration with password or OTP.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "event": {
                    "type": "string",
                    "enum": ["login", "register"]
                  },
                  "mode": {
                    "type": "string",
                    "enum": ["email-password", "mobile-password", "email-otp", "mobile-otp"]
                  },
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string", "format": "password" },
                  "mobile": { "type": "string" },
                  "country-code": { "type": "string" },
                  "otp": { "type": "string" }
                },
                "required": ["event", "mode"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication successful. The response body contains the session details and a 'token' cookie is set in the header.",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "token=...; Path=/; HttpOnly"
                }
              }
            }
          },
          "400": { "description": "Bad Request" },
          "401": { "description": "Invalid Credentials" },
          "404": { "description": "User not found" }
        }
      }
    },
    "/auth/password": {
      "put": {
        "summary": "Manage Password (Set, Update, Reset)",
        "tags": ["User"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ManagePasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Password action successful." },
          "400": { "description": "Bad Request" },
          "401": { "description": "Invalid OTP or current password" }
        }
      }
    },
    "/auth/user": {
      "get": {
        "summary": "Get Authenticated User Details",
        "tags": ["User"],
        "security": [{ "cookieAuth": [] }],
        "responses": {
          "200": {
            "description": "Successful retrieval of user data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": { "description": "Unauthorized" },
          "404": { "description": "User not found" }
        }
      },
      "put": {
        "summary": "Update Authenticated User Details",
        "tags": ["User"],
        "security": [{ "cookieAuth": [] }],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": { "description": "User details updated successfully." },
          "401": { "description": "Unauthorized" },
          "404": { "description": "User not found" }
        }
      },
      "delete": {
        "summary": "Delete a User (Admin Only)",
        "tags": ["User"],
        "security": [{ "cookieAuth": [] }],
        "parameters": [
          {
            "name": "user-id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the user to delete."
          }
        ],
        "responses": {
          "200": { "description": "User deleted successfully." },
          "401": { "description": "Unauthorized" },
          "403": { "description": "Forbidden - requires admin role." },
          "404": { "description": "User not found" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "user-id": { "type": "string" },
          "profile-photo": { "type": "string", "format": "uri" },
          "email": { "type": "string", "format": "email" },
          "email-verified": { "type": "boolean" },
          "mobile": { "type": "string" },
          "country-code": { "type": "string" },
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "dob": { "type": "string", "format": "date" },
          "passwordSet": { "type": "boolean" },
          "created-at": { "type": "string", "format": "date-time" }
        }
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "firstName": { "type": "string" },
          "lastName": { "type": "string" },
          "dob": { "type": "string", "format": "date" },
          "profile-photo": { "type": "string", "format": "uri" }
        }
      },
      "ManagePasswordRequest": {
        "type": "object",
        "properties": {
          "event": { "type": "string", "enum": ["set", "update", "reset", "forgot"] },
          "current-password": { "type": "string" },
          "new-password": { "type": "string" },
          "mode": { "type": "string", "enum": ["email", "mobile"] },
          "email": { "type": "string", "format": "email" },
          "mobile": { "type": "string" },
          "country-code": { "type": "string" },
          "otp": { "type": "string" }
        },
        "required": ["event"]
      },
      "SuccessOtpSend": {
        "type": "object",
        "properties": {
          "status": { "type": "string", "example": "success" },
          "code": { "type": "integer", "example": 200 },
          "data": {
            "type": "object",
            "properties": {
              "message": { "type": "string" },
              "expires_in": { "type": "integer" },
              "passcode": { "type": "string" }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "token"
      }
    }
  }
}
